PDDL (Planning Domain Definition Language) is a domain-independent planning language used to define the structure of planning problems. It was first developed in the late 1980s by John S. McDermott and his colleagues at NASA's Ames Research Center.

PDDL provides a common framework for representing planning domains, problems, and plans. Its main goals are:

1. To provide a standardized way to represent planning problems.
2. To enable the use of different planning formalisms (e.g., CSPs, SAT-based planners).
3. To facilitate the exchange of knowledge between researchers and practitioners in the field.

A PDDL problem consists of three main components:

1. **Domain**: A description of the planning domain, including its structure, constraints, and actions.
2. **Problem instance**: An instantiation of the domain with specific objects, actions, and goals.
3. **Plan**: A sequence of actions that solve the problem.

PDDL provides several features to support plan creation, such as:

* Actions: These define how to manipulate objects in the domain (e.g., "pick up" an object).
* Predicates: These describe the relationships between objects (e.g., "is-a" relation between objects).
* Fluents: These represent changes or states of affairs in the domain.
* Goals: These specify what needs to be achieved.

PDDL is widely used in research and practice for planning, decision-making, and robotics. It has been implemented in various planning systems, including:

* Open Planning Library (OPL)
* Planning Domain Definition Language (PDDL) version 2.1
* PDDL++: a language extension for specifying complex actions

Some of the applications where PDDL is used include:

* Robotics and automation
* Supply chain management
* Healthcare and medical planning
* Logistics and transportation planning

Overall, PDDL provides a standardized framework for representing planning problems and enables researchers to develop more effective planning systems.